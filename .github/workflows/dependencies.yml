name: Dependabot auto-merge
on: pull_request

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-test:
    name: Build and test image
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}

    strategy:
      matrix:
        arch: ["amd64"]
        include:
          tag: 'v${{ vars.RELEASE_VERSION }}'
          version: ${{ vars.RELEASE_VERSION }}
          branch: master
      fail-fast: true

    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Sanitize repo slug
        uses: actions/github-script@v7
        id: repo_slug
        with:
          result-encoding: string
          script: return '${{ github.repository }}'.toLowerCase()
      
      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.tag }}

      - uses: dsaltares/fetch-gh-release-asset@1.1.2
        with:
          repo: 'Radarr/Radarr'
          version: 'tags/${{ matrix.tag }}'
          file: 'Radarr.${{ matrix.branch }}.${{ matrix.version }}.linux-musl-core-x64.tar.gz'
          target: 'radarr.tar.gz'
          token: ${{ github.token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        continue-on-error: true
        id: buildx1
        with:
          build-args: |
            VERSION=${{ matrix.version }}
          context: .
          platforms: linux/${{ matrix.arch }}
          load: true
          tags: stable-test

      # Temp workaround for failed builds
      - name: Wait to retry
        if: steps.buildx1.outcome != 'success'
        run: |
          sleep 60

      # Temp workaround for failed builds
      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        if: steps.buildx1.outcome != 'success'
        with:
          build-args: |
            VERSION=${{ matrix.version }}
          context: .
          platforms: linux/${{ matrix.arch }}
          load: true
          tags: stable-test

      - name: Test
        run: |
          docker run --rm stable-test

  dependabot:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ github.token }}"

      - name: Enable auto-merge for Dependabot PRs
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ github.token }}